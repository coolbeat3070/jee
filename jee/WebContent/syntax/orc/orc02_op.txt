2)연산자
단항 연산자
1. 산술 연산자 : +,-,*,/,mod(10,3)=1
2. 관계 연산자 : >,<,>=,<=,=,!=(<>)
. 문자열 연산자 : like(% 모든 문자, _한 문자)

다항 연산자
4. 논리 연산자 : not, and, or

급여가 1000~2000인 사람을 추출
select ename 이름, sal 급여from emp where sal >=1000 and sal <=2000;
범위연산자 : between A and B (A와 B의 값을 포함하는 범위)
               단점-초과나 미만은 사용할 수 없다.
                   -작동프로그램상 범위연산자을 내부적으로 and로 변경해서 처리한다.  

급여가 1000~2000인 아닌 사람을 추출
select ename 이름, sal 급여 from emp where sal <1000 or sal >2000 ;
not(sal >=1000 and sal <=2000)

-where절에서 자주 사용하는 조건에 index을 지정한다.
-가장 비효율적인 검색은 full table scan이다. 효율적인 검색을 위해서 index를 사용하여 행주소를 보다 빠르게 추출한다. not 연산자는 index를 사용할 수 없다. 즉, 어쩔 수 없는 경우라면 not를 쓰지 않는다.

job이 'salesnan','clerk'인 사람을 추출
select ename 이름, job 직업 from emp where lower(job) = 'salesman' or lower(job) = 'clerk';
-데이터(값)은 대소문자를 구분한다.
-upper와 lower함수를 이용할 수 있다.
-in연산자 : or연산자와 같은 역할을 하는 연산자 // in(A,B,...) : A or B or ...
         내부적으로는 in연산자를 or연산자로 변경하여 처리하므로 자주 사용되지 않는다.
         단, 명령을 사용하여 추출되는 데이터를 연결할 경우에는 in으로 처리할 수 밖에 없다.
               ex) in(쿼리) : 쿼리에서 추출되는 데이터를 모두 or로 연결

함수 : 자주 사용되는 모듈을 지정해두고 호출해서 사용하는 것
       일반적으로 함수는 ()를 포함한다.
       
-SQL에는 ()가 없는 함수도 있다.
ex) sysdate : 사용하는 컴퓨터의 시간 정보(return 타입 = date)
     select to_char(sysdate,'yyyy-mm-dd hh24:mi:ss') from dual;
   
-dual : 임시적 결과를 보기위해 사용하는 테이블

insert into emp(empno,ename,hiredate) values(201,'홍동우',sysdate);

입사일이 '90/01/01'~13/12/18'인 사람을 추출(A~B날짜 제한)
select ename, hiredate from emp where hiredate>='90/01/01' and hiredate<'13/12/19';
-날짜 제한을 할 경우에 B의 정각까지만 측정이 된다.

입사일이 '13/12/18' 자정~오후 6시인 사람을 추출(시간제한)
select ename, hiredate from emp where hiredate >= '13/12/18' and hiredate <= to_date('13/12/18 8:00:00','yy/mm/dd hh24:mi:ss');
-to_date() : 시간까지 표현할 때 사용하는 함수

커미션이 널인 사람을 추출
select ename, comm from emp where comm is null;
-null는 비교/연산할 수 없다.

select ename, nvl(comm,0) comm from emp where comm is null;
-nvl(column,대체값) : 컬럼의 값에 대한 대체값을 입력학한다. 단, 반드시 별칭을 사용할 것! 별칭을 사용하지 않을 경우 해당 함수가 새로운 컬럼으로 생성된다.

사업명, 급여 커미션 총급여(급여+커미션)을 추출
select ename, sal, comm, (sal+nvl(comm,0)) total from emp;
-null은 DB에 불필요하므로 최대한 나오지 않도록 해야 한다.

|| : 연결 연산자
[xxx의 급여는 xxxx입니다.]의 형태로 추출
select ename||'의 급여는 '||sal||'입니다.' as A from emp;  //자동형 변환이 된다.

사원이름 A로 시작하는 사원을 추출
select ename from emp where ename like 'A%';

이름의 두번째 문자가 L인 사람을 추출
select ename from emp where ename like '_L%';

이름에 L을 두 번 이상 포함하는 사람을 추출
select ename from emp where ename like '%L%L%';



--연산자 연습 쿼리 문제


<EMP> Table
1. emp table의 모든 열을 하나의 열로 출력하라.
(단, 각 열은 쉼표로 구분하며 표시하고, 열의 이름은 THE_OUTPUT으로 지정하라)
select empno||ename||job||mgr||hiredate||sal||comm||deptno as THE_OUTPUT from emp;

2. 급여가 1500 ~ 2850 사이의 범위에 속하지 않는 모든 사원의 이름 및 급여를 표시하라.
select ename,sal from emp where sal<1500 or sal>2000;

3. 1981년 2월 20일 ~ 1981년 5월 1일에 입사한 사원의 이름, 직위 및 입사일을 표시하라.
select ename,job,hiredate from emp where hiredate>='81/02/20' and hiredate<='81/05/01';

4. 부서가 10, 30에 속하는 사원 중 급여가 1500을 넘는 사원의 이름 및 급여를 표시하라.
select ename,sal from emp where (deptno=10 or deptno=30) and sal>1500;

5. 1982년에 입사한 모든 사원의 이름과 입사일을 표시하라.
select ename, hiredate from emp where hiredate = to_date('1982','yyyy');

6. 이름에 L이 두 번 들어가며 부서 30에 속하거나 관리자 번호가 7782인 모든 사원의 이름을 표시하라.
select ename from emp where (ename like '%L%L%') and (deptno=30 or mgr=7782); 

7. 이름에 L이 두 번만*** 들어가는 사원의 이름을 표시하라(instr함수 이용)
select ename from emp where instr(ename,'L')=2;

8. 직위가 CLREK, ANALYST 이면서 급여가 1000, 3000, 5000가 아닌 모든 사원의 이름, 직위 및 급여를 표시하라.
select ename, job, sal from emp where lower(job)='clerk' and lower(job)='analyst' and not (sal=1000 or sal=3000 or sal=5000);

9. 사원 번호, 이름, 급여 및 15% 인상된 급여를 표시하고 열 레이블을 NEW SALARY로 하라.
select empno,ename,sal,sal*1.15 as NEW_SALARY from emp;

10. 사원 이름 및 커미션을 표시하는 질의를 작성한다.
    커미션을 받지 않는 사원일 경우 ‘No Commision’을 표시하고 열 이름을 COMM으로 지정한다.
select ename,nul(comm,'No commision')as COMM from emp;


